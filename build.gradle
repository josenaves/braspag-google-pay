// Top-level build file where you can add configuration options common to all sub-projects/modules.

// SEE https://notes.devlabs.bg/beginners-guide-for-publishing-a-kotlin-library-to-jcenter-41272bfc214
// SEE https://wajahatkarim.com/2018/06/publishing-your-android-kotlin-or-java-library-to-jcenter-from-android-studio/
// SEE https://medium.com/@anitaa_1990/6-easy-steps-to-upload-your-android-library-to-bintray-jcenter-59e6030c8890
buildscript {

    ext.kotlin_version = '1.3.50'
    ext.dokka_version = '0.9.18'
    ext.libraryVersion = '1.0.0'

    repositories {
        google()
        jcenter()
    }

    dependencies {

        classpath 'com.android.tools.build:gradle:3.5.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // The Gradle Bintray Plugin allows you to publish artifacts to Bintray.
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'

        // Modification to the standard Maven plugin to be compatible with android-library projects (aar).
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'

        // Dokka is a documentation engine for Kotlin, performing the same function as javadoc for Java.
        // Just like Kotlin itself, Dokka fully supports mixed-language Java/Kotlin projects.
        // It understands standard Javadoc comments in Java files and KDoc comments in Kotlin files,
        // and can generate documentation in multiple formats including standard Javadoc, HTML
        // and Markdown.
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:${dokka_version}"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
